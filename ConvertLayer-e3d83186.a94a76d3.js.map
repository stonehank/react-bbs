{"version":3,"sources":["../node_modules/node-fetch/browser.js","../src/server-layer/leancloud/CustomAV.js","../src/server-layer/leancloud/ConvertLayer.ts","../src/server-layer/leancloud/APICore.ts","../src/server-layer/leancloud/initAVObject.js"],"names":["getGlobal","self","window","global","Error","module","exports","fetch","default","bind","Headers","Request","Response","checkType","check","checkList","arr","type","Object","prototype","toString","call","slice","includes","join","currentUser","Obj","className","obj","method","k","this","__table__","__classes__","__data__","id","objectId","createdAt","updatedAt","attributes","__method__","hasOwnProperty","increment","key","amount","__op","set","value","get","setACL","acl","CustomAV","ACL","aclObj","permissionsById","save","serverURLs","api","body","JSON","stringify","headers","X-LC-Id","__appId__","X-LC-Key","__appKey__","X-LC-Session","sessionToken","Content-Type","then","json","objData","_this","assign","rewriteCommentToSDKObj","User","userTableName","_this2","setUsername","username","setPassword","password","_Obj","userData","_this3","current","logOut","logIn","data","ok","userObj","userTable","rewriteUserToSDKObj","_this4","commentObj","tableName","engine","push","stats","init","options","appId","appKey","other","s","_proto3","setPublicReadAccess","allowed","read","setPublicWriteAccess","write","setReadAccess","userId","setWriteAccess","extend","Query","table","conditions","_proto4","equalTo","where","_this6","notEqualTo","$ne","containedIn","values","$in","select","keys","Array","isArray","i","length","skip","num","limit","addDescending","order","addAscending","descending","ascending","count","_find","code","find","results","res","_this7","err","condQuery","v","encodeURIComponent","useState","initialLoading","setInitialLoading","noMoreRemoteData","useRef","waitNextInserted","checkOnNextInsert","allCommentData","objectIdToData","readConfig","pageviewMap","countMap","CommentClass","CounterClass","UserClass","editMode","oldRandOwnerCode","getFromCache","newRandOwnerCode","randUniqueString","defaultUser","commentsPage","errorCodeMsg","100","401","403","loggedUser","readLoggedUser","__generatePageViews__","uniqStr","title","newCounter","AV","ex","console","error","signIn_server","Promise","resolve","user","log","signUp_server","setCache","fetchComments_server","items","map","fetchCounts_server","includeReply","query","counts","fetchPageViews_server","has","warn","item","updateTime","serverInit","$serverLessBBS","resp","api_server","__getServerURLs__","url","urls","startsWith","__initServerURLs__","e","initAVObject","updateComment_server","message","reject","comment","uploadComment_server","uploadField","location","href","response","msg","useAPICore","useEffect","fetchPageViews","useCallback","fetchCounts","updateComment","editData","uploadComment","replyId","list","replyData","replys","replyCounts","unshift","__insertInToList__","fetchCurrentUser","simpleUser","setLoggedUser","__mergeToNest__","newFetchList","concat","replyCandid","newAllCommentData","sort","a","b","replyItem","__insertReplyItem__","inserted","__generateReplyCounts__","__generateIndexSearch__","allList","rootId","curDetectObj","fetchComments","params","pageSize","page","deepReply","deepReplyCounts","flatList","__getMoreData__","nestedData","filterData","__deepSearchReply__","allReplyList","result","cloneDeep","__deepSearchReplyCount__","allCounts","setTimeout","total","Math","max"],"mappings":"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","file":"ConvertLayer-e3d83186.a94a76d3.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","// import {getFromCache} from './utils'\nimport fetch from 'node-fetch'\n\nfunction checkType(check, checkList) {\n  let arr\n  if (typeof checkList === 'string') {\n    arr = [checkList]\n  } else {\n    arr = checkList\n  }\n  const type = Object.prototype.toString.call(check).slice(8, -1)\n  if (!arr.includes(type)) {\n    throw new Error('parameter type must be ' + arr.join(' or ') + '!')\n  }\n  return true\n}\n// let applicationId=null,\n//   applicationKey=null\nlet currentUser = null\n\nclass Obj {\n  constructor(className, obj, method = 'POST') {\n    this.__table__ = className\n    this.__classes__ = 'classes'\n    this.__data__ = {}\n    this.id = obj ? obj.objectId : null\n    this.createdAt = obj ? obj.createdAt : null\n    this.updatedAt = obj ? obj.updatedAt : null\n    this.attributes = {}\n    this.__method__ = method\n    for (const k in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, k)) {\n        if (k === '_r' || k === '_w' || k === 'ua' || k === 'ownerCode') continue\n        this.attributes[k] = obj[k]\n      }\n    }\n  }\n\n  increment(key, amount = 1) {\n    checkType(key, 'String')\n    checkType(amount, 'Number')\n    this.__data__[key] = { __op: 'Increment', amount: amount }\n    return this\n  }\n\n  set(key, value) {\n    checkType(key, 'String')\n    this.__data__[key] = value\n    return this\n  }\n\n  get(key) {\n    checkType(key, 'String')\n    return this.attributes[key]\n  }\n\n  setACL(acl) {\n    if (acl instanceof CustomAV.ACL === false) {\n      throw new Error('parameter must instacneof AV.ACL')\n    }\n    this.__data__.ACL = {}\n    const aclObj = acl.permissionsById\n    for (const k in aclObj) {\n      this.__data__.ACL[k] = aclObj[k]\n    }\n    return this\n  }\n\n  save() {\n    const url =\n      this.__method__ === 'PUT'\n        ? `${CustomAV.serverURLs.api}/1.1/${this.__classes__}/${this.__table__}/${this.id}?fetchWhenSave=true`\n        : `${CustomAV.serverURLs.api}/1.1/${this.__classes__}/${this.__table__}?fetchWhenSave=true`\n\n    return fetch(url, {\n      method: this.__method__,\n      body: JSON.stringify(this.__data__),\n      headers: {\n        'X-LC-Id': CustomAV.__appId__,\n        'X-LC-Key': CustomAV.__appKey__,\n        'X-LC-Session': currentUser && currentUser.attributes.sessionToken,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((obj) => obj.json())\n      .then((objData) => {\n        if (this.__method__ === 'PUT') {\n          objData = Object.assign(this.attributes, objData)\n        }\n        if (this.__method__ === 'POST') {\n          this.__method__ = 'PUT'\n          this.id = objData.objectId\n        }\n        // let customData={}\n        // customData.id=objData.objectId\n        // customData.createdAt=objData.createdAt\n        // customData.attributes=Object.assign({},objData)\n        return rewriteCommentToSDKObj(objData, this.__table__)\n      })\n  }\n}\nclass User extends Obj {\n  constructor(userTableName) {\n    if (!userTableName) userTableName = 'Users'\n    super(userTableName)\n    this.__table__ = userTableName\n  }\n\n  setUsername(username) {\n    this.set('username', username)\n  }\n\n  setPassword(password) {\n    this.set('password', password)\n  }\n\n  save() {\n    return super.save().then((userData) => {\n      if (this.__method__ === 'POST') {\n        this.__method__ = 'PUT'\n        this.id = userData.objectId\n      }\n      if (!currentUser) currentUser = {}\n      userData.attributes.username = this.__data__.username\n      userData = Object.assign(currentUser, userData)\n      currentUser = userData\n\n      return currentUser\n    })\n  }\n\n  static current() {\n    return currentUser\n  }\n\n  static logOut() {\n    currentUser = null\n  }\n\n  static logIn(username, password) {\n    const url = `${CustomAV.serverURLs.api}/1.1/login`\n\n    return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'X-LC-Id': CustomAV.__appId__,\n        'X-LC-Key': CustomAV.__appKey__,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((data) => {\n        if (data.ok) {\n          return data.json()\n        } else {\n          throw new Error('Login failed')\n        }\n      })\n      .then((userObj) => {\n        rewriteUserToSDKObj(this.__table__, userObj, username)\n        return currentUser\n      })\n  }\n}\n\nfunction rewriteCommentToSDKObj(commentObj, tableName) {\n  return new Obj(tableName, commentObj, 'PUT')\n}\n\nfunction rewriteUserToSDKObj(userTable, userObj, username) {\n  userObj.username = username\n  currentUser = new Obj(userTable, userObj, 'PUT')\n  return currentUser\n}\n\nconst CustomAV = {\n  __appId__: '',\n  __appKey__: '',\n  serverURLs: {\n    api: 'https://i5daxohp.api.lncld.net',\n    engine: 'https://i5daxohp.engine.lncld.net',\n    push: 'https://i5daxohp.push.lncld.net',\n    stats: 'https://i5daxohp.stats.lncld.net'\n  },\n  init: (options) => {\n    if (!options.appId || !options.appKey) {\n      throw new Error('appId or appKey must be required!')\n    }\n    const { appId, appKey, ...other } = options\n    CustomAV.__appKey__ = appKey\n    CustomAV.__appId__ = appId\n    // applicationId=appKey\n    // applicationKey=appKey\n    for (const k in other) {\n      if (Object.prototype.hasOwnProperty.call(other, k)) {\n        if (CustomAV[k] != null) CustomAV[k] = other[k]\n      }\n    }\n    if (typeof CustomAV.serverURLs === 'string') {\n      const s = CustomAV.serverURLs\n      CustomAV.serverURLs = {\n        api: s,\n        engine: s,\n        push: s,\n        stats: s\n      }\n    }\n  },\n  ACL: class ACL {\n    constructor() {\n      this.permissionsById = {}\n    }\n\n    setPublicReadAccess(allowed) {\n      checkType(allowed, 'Boolean')\n      if (this.permissionsById['*'] == null) {\n        this.permissionsById['*'] = {}\n      }\n      this.permissionsById['*'].read = allowed\n    }\n\n    setPublicWriteAccess(allowed) {\n      checkType(allowed, 'Boolean')\n      if (this.permissionsById['*'] == null) {\n        this.permissionsById['*'] = {}\n      }\n      this.permissionsById['*'].write = allowed\n    }\n\n    setReadAccess(userId, allowed) {\n      checkType(allowed, 'Boolean')\n      if (this.permissionsById[userId] == null) {\n        this.permissionsById[userId] = {}\n      }\n      this.permissionsById[userId].read = allowed\n    }\n\n    setWriteAccess(userId, allowed) {\n      checkType(allowed, 'Boolean')\n      if (this.permissionsById[userId] == null) {\n        this.permissionsById[userId] = {}\n      }\n      this.permissionsById[userId].write = allowed\n    }\n  },\n  Object: {\n    extend: (className) => {\n      checkType(className, 'String')\n      return Obj.bind(this, className)\n    }\n  },\n  Query: class Query {\n    constructor(table) {\n      if (!table) table = 'Users'\n      this.__table__ = table\n      this.conditions = {}\n    }\n\n    equalTo(key, value) {\n      checkType(key, 'String')\n      if (this.conditions.where == null) {\n        this.conditions.where = {}\n      }\n      const where = this.conditions.where\n      where[key] = value\n      return this\n    }\n\n    get(objectId) {\n      return fetch(`${CustomAV.serverURLs.api}/1.1/classes/${this.__table__}/${objectId}?fetchWhenSave=true`, {\n        headers: {\n          'X-LC-Id': CustomAV.__appId__,\n          'X-LC-Key': CustomAV.__appKey__,\n          'Content-Type': 'application/json'\n        }\n      })\n        .then((obj) => obj.json())\n        .then((commentObj) => {\n          return rewriteCommentToSDKObj(commentObj, this.__table__)\n        })\n    }\n\n    notEqualTo(key, value) {\n      checkType(key, 'String')\n      if (this.conditions.where == null) {\n        this.conditions.where = {}\n      }\n      const where = this.conditions.where\n      where[key] = { $ne: value }\n      return this\n    }\n\n    containedIn(key, values) {\n      checkType(key, 'String')\n      checkType(values, 'Array')\n      if (this.conditions.where == null) {\n        this.conditions.where = {}\n      }\n      const where = this.conditions.where\n      where[key] = { $in: values }\n      return this\n    }\n\n    select(keys) {\n      checkType(keys, ['String', 'Array'])\n      let arr\n      if (typeof keys === 'string') {\n        arr = [keys]\n      } else if (Array.isArray(keys)) {\n        arr = keys\n      }\n      if (this.conditions.keys == null) {\n        this.conditions.keys = ''\n      }\n      for (let i = 0; i < arr.length - 1; i++) {\n        this.conditions.keys += arr[i] + ','\n      }\n      this.conditions.keys += arr[arr.length - 1]\n      return this\n    }\n\n    skip(num) {\n      checkType(num, 'Number')\n      this.conditions.skip = num\n      return this\n    }\n\n    limit(num) {\n      checkType(num, 'Number')\n      this.conditions.limit = num\n      return this\n    }\n\n    addDescending(key) {\n      checkType(key, 'String')\n      if (this.conditions.order != null) {\n        this.conditions.order += ','\n      } else {\n        this.conditions.order = ''\n      }\n      this.conditions.order += '-' + key\n      return this\n    }\n\n    addAscending(key) {\n      checkType(key, 'String')\n      if (this.conditions.order != null) {\n        this.conditions.order += ','\n      } else {\n        this.conditions.order = ''\n      }\n\n      this.conditions.order += key\n      return this\n    }\n\n    descending(key) {\n      checkType(key, 'String')\n      this.conditions.order = '-' + key\n      return this\n    }\n\n    ascending(key) {\n      checkType(key, 'String')\n      this.conditions.order = key\n      return this\n    }\n\n    count() {\n      this.conditions.count = 1\n      if (this.conditions.limit == null) {\n        this.conditions.limit = 0\n      }\n      return this._find().then((data) => {\n        if (data.code === 101) {\n          throw data\n        }\n        return data.count\n      })\n    }\n\n    find() {\n      return this._find()\n        .then((data) => {\n          if (data.code === 101) {\n            throw data\n          }\n          if (!data.results) {\n            throw data\n          }\n          const results = data.results\n          const res = []\n          for (let i = 0; i < results.length; i++) {\n            res.push(new Obj(this.__table__, results[i], 'PUT'))\n          }\n          return res\n        })\n        .catch((err) => {\n          throw err\n        })\n    }\n\n    _find() {\n      let condQuery = ''\n      for (const key in this.conditions) {\n        const v = this.conditions[key]\n        let stringify\n        if (v == null) continue\n        if (typeof v !== 'object') {\n          stringify = v\n        } else {\n          stringify = JSON.stringify(v)\n        }\n        condQuery += `&${key}=${encodeURIComponent(stringify)}`\n      }\n      condQuery = condQuery.slice(1)\n\n      return fetch(`${CustomAV.serverURLs.api}/1.1/classes/${this.__table__}?${condQuery}`, {\n        headers: {\n          'X-LC-Id': CustomAV.__appId__,\n          'X-LC-Key': CustomAV.__appKey__,\n          'Content-Type': 'application/json'\n        }\n      }).then((obj) => obj.json())\n    }\n  },\n  User: User\n}\n\nexport default CustomAV\n","import { useEffect, useState, useRef, useCallback } from 'react';\nimport { readConfig, setLoggedUser } from '../../config'\nimport useAPICore from './APICore'\nimport {\n  CommentObject,\n  ConvertLayerIInterface,\n  FetchCommentParams,\n  FetchCommentResult,\n  SignUserInfo\n} from '../../types'\nimport cloneDeep from 'clone-deep'\n\n/**\n * STEP1: 一次性获取1000个数据\n * STEP2: 转换为嵌套数据, 并且计算回复数\n * STEP3: 根据参数要求提供对应的数据展示\n * 更少的API调用，但是会获取更多的数据\n */\nexport default function useConvertLayer(): ConvertLayerIInterface {\n  const [initialLoading, setInitialLoading] = useState(true)\n  const noMoreRemoteData=useRef(false)\n  const waitNextInserted=useRef([])\n  const checkOnNextInsert=useRef<boolean>(false)\n  const allCommentData = useRef<CommentObject[]>([])\n  const objectIdToData = useRef<{ [key: string]: CommentObject }>({})\n  const { pageviewMap, countMap } = readConfig()\n\n  const {\n    serverInit,\n    signIn_server,\n    fetchCounts_server,\n    fetchPageViews_server,\n    updateComment_server,\n    uploadComment_server,\n    fetchComments_server\n  } = useAPICore()\n\n  useEffect(() => {\n    serverInit().then(() => setInitialLoading(false))\n  }, [])\n\n  /**\n   * Required\n   */\n  const fetchPageViews=useCallback(function(uniqStr) {\n    return fetchPageViews_server(uniqStr).then((counts) => {\n      pageviewMap.set(uniqStr, counts)\n      return counts\n    })\n  },[])\n  /**\n   * Required\n   */\n  const fetchCounts=useCallback(function (uniqStr) {\n    return fetchCounts_server(uniqStr).then((counts) => {\n      countMap.set(uniqStr, counts)\n      return counts\n    })\n  },[])\n  /**\n   * Required\n   */\n  const updateComment=useCallback(function(id, message) {\n    return updateComment_server(id, message).then((data) => {\n      if (!data) return null\n      __updateCommentAfterEdit__(id, data)\n      return data\n    })\n  },[])\n\n  /**\n   * Required\n   */\n  const uploadComment=useCallback(function(uploadField) {\n    return uploadComment_server(uploadField)\n      .then((data) => {\n        if (!data) return null\n        if (!data.replyId) {\n          const count = countMap.get(data.uniqStr)\n          countMap.set(data.uniqStr, count + 1)\n        }\n        __insertInToList__(allCommentData.current, data)\n        return data\n      })\n      .catch((err) => {\n        console.error(err)\n        return null\n      })\n  },[])\n  /**\n   * Required\n   */\n  const fetchCurrentUser=useCallback(function(): Promise<SignUserInfo> {\n    return signIn_server().then((user) => {\n      let simpleUser: SignUserInfo = user\n      if (user.attributes) {\n        simpleUser = {\n          id: user.id,\n          sessionToken: user.attributes.sessionToken,\n          username: user.attributes.username\n        }\n      }\n      setLoggedUser(simpleUser)\n      return simpleUser\n    })\n  },[])\n  /**\n   * Required\n   * @param params\n   * @returns {Promise<Object>} {data, total}\n   */\n  const fetchComments=useCallback(function(params: FetchCommentParams): Promise<FetchCommentResult> {\n    /*\n            uniqStr         // 页面唯一值\n            rootId          // rootId， 用于插入数据\n            replyId         // 存在则搜索对应replyId的数据\n            page            // 数据页码\n            pageSize        // 数据每页条数\n            deepReply       // Boolean, 存在则深度搜索每一个回复（嵌套回复）\n            deepReplyCounts // 存在则深度搜索回复数量\n         */\n    const { uniqStr, replyId, pageSize, page, deepReply, deepReplyCounts } = params\n    let data: Promise<CommentObject[]>\n    checkOnNextInsert.current=true\n    if (!replyId && !noMoreRemoteData.current) {\n      data = __getMoreData__(uniqStr)\n    } else {\n      data = Promise.resolve(allCommentData.current)\n    }\n    return data.then((nestedData) => {\n      let filterData = nestedData\n      if (replyId) {\n        filterData = objectIdToData.current[replyId].replys\n        if (deepReply) {\n          filterData = __deepSearchReply__(filterData)\n        }\n      } else {\n        if (deepReply) {\n          filterData = Object.values(objectIdToData.current)\n        }\n      }\n      filterData = filterData.sort((a, b) => (a.createdAt < b.createdAt ? 1 : -1))\n      // 这里获取从0到当前page的所有评论\n      let result: CommentObject[] = cloneDeep(filterData.slice(0, pageSize * page))\n      if (deepReplyCounts) {\n        __deepSearchReplyCount__(result)\n      }\n      result = result.map((obj) => {\n        obj.replys = null\n        return obj\n      })\n\n      return new Promise((res) => {\n        setTimeout(() => {\n          res({\n            data: result,\n            total: Math.max(allCommentData.current.length, result.length, filterData.length)\n          })\n        }, 200)\n      })\n    })\n  },[])\n\n  function __updateCommentAfterEdit__(objectId, editData) {\n    // let comment=objectIdToData.current[objectId]\n    objectIdToData.current[objectId].message = editData.message\n    objectIdToData.current[objectId].updatedAt = editData.updatedAt\n  }\n  function __insertInToList__(list, data) {\n    // 插入到对应的嵌套层，同时也要更新replyCounts数字\n    if (data.replyId) {\n      const replyData = objectIdToData.current[data.replyId]\n      if (replyData.replys == null) {\n        replyData.replys = []\n        replyData.replyCounts = 0\n      }\n      replyData.replys.unshift(data)\n      replyData.replyCounts++\n    } else {\n      list.unshift(data)\n    }\n    objectIdToData.current[data.objectId] = data\n  }\n  function __getMoreData__(uniqStr: string): Promise<CommentObject[]> {\n    console.log('mock network')\n    return fetchComments_server(uniqStr)\n      .then((flatList) => {\n        noMoreRemoteData.current=flatList.length < 1000\n        return flatList\n      })\n      .then(__generateIndexSearch__)\n      .then(__mergeToNest__)\n      .then(__generateReplyCounts__)\n  }\n  function __deepSearchReply__(allReplyList): CommentObject[] {\n    let res: CommentObject[] = []\n    for (let i = 0; i < allReplyList.length; i++) {\n      res.push(allReplyList[i])\n      if (allReplyList[i].replys) {\n        res = res.concat(__deepSearchReply__(allReplyList[i].replys))\n      }\n    }\n    return res\n  }\n  function __deepSearchReplyCount__(allReplyList) {\n    let allCounts = 0\n    for (let i = 0; i < allReplyList.length; i++) {\n      if (allReplyList[i].replys && allReplyList[i].replys.length > 0) {\n        allReplyList[i].replyCounts = __deepSearchReplyCount__(allReplyList[i].replys)\n        allCounts += allReplyList[i].replyCounts + 1\n      } else {\n        allCounts += 1\n      }\n    }\n    return allCounts\n  }\n  function __mergeToNest__(newFetchList): CommentObject[] {\n    if (checkOnNextInsert.current) {\n      newFetchList = newFetchList.concat(waitNextInserted.current)\n      waitNextInserted.current=[]\n      checkOnNextInsert.current=false\n    }\n    const replyCandid: CommentObject[] = []\n    let newAllCommentData = allCommentData.current.slice()\n    for (const item of newFetchList) {\n      if (item.replyId) {\n        replyCandid.push(item)\n        continue\n      }\n      newAllCommentData.push(item)\n    }\n    replyCandid.sort((a, b) => (a.createdAt < b.createdAt ? -1 : 1))\n    // DFS遍历arr\n    for (const replyItem of replyCandid) {\n      const res = __insertReplyItem__(newAllCommentData, replyItem)\n      if (res.inserted) {\n        newAllCommentData = res.list\n      } else {\n        waitNextInserted.current=[...waitNextInserted.current, replyItem]\n      }\n    }\n    allCommentData.current = newAllCommentData\n    return newAllCommentData\n  }\n  function __generateReplyCounts__(list) {\n    for (const item of list) {\n      if (item.replys && item.replys.length > 0) {\n        item.replyCounts = item.replys.length\n        __generateReplyCounts__(item.replys)\n      } else {\n        item.replyCounts = 0\n      }\n    }\n    return list\n  }\n  function __generateIndexSearch__(list) {\n    for (const item of list) {\n      objectIdToData.current[item.objectId] = item\n    }\n    return list\n  }\n  function __insertReplyItem__(\n    allList: CommentObject[],\n    item: CommentObject\n  ): {\n    list: CommentObject[];\n    inserted: boolean;\n  } {\n    if (!allList || allList.length === 0) return { list: allList, inserted: false }\n    allList.sort((a, b) => (a.createdAt < b.createdAt ? 1 : -1))\n    const { replyId, rootId } = item\n    for (let i = 0; i < allList.length; i++) {\n      const curDetectObj = allList[i]\n      const detectObjRootId = curDetectObj.rootId || curDetectObj.objectId\n      if (detectObjRootId !== rootId) continue\n      if (curDetectObj.objectId === replyId) {\n        if (curDetectObj.replys == null) curDetectObj.replys = []\n        curDetectObj.replys.push(item)\n        return { list: allList, inserted: true }\n      } else {\n        const res = __insertReplyItem__(curDetectObj.replys, item)\n        if (res.inserted) {\n          curDetectObj.replys = res.list\n          return { list: allList, inserted: true }\n        }\n      }\n    }\n    return { list: allList, inserted: false }\n  }\n\n  return {\n    initialLoading,\n    fetchPageViews,\n    fetchComments,\n    fetchCounts,\n    fetchCurrentUser,\n    updateComment,\n    uploadComment\n  }\n}\n","import AV from './CustomAV'\nimport initAVObject from './initAVObject'\nimport { getFromCache, randUniqueString, setCache } from '../../utils'\nimport { readConfig, readLoggedUser } from '../../config'\nimport { APICoreInterface } from '../../types'\n\nexport default function useAPICore(): APICoreInterface {\n  const { appId, appKey, serverURLs, CommentClass, CounterClass, UserClass, editMode, pageviewMap } = readConfig()\n  const ownerCodeKey = 'serverless_react_bbs_ownerCode'\n  let oldRandOwnerCode = getFromCache(ownerCodeKey)\n  const newRandOwnerCode = oldRandOwnerCode || randUniqueString()\n  const defaultUser = {\n    id: null,\n    attributes: {\n      objectId: null,\n      sessionToken: null,\n      username: null\n    }\n  }\n  let commentsPage = 1\n  const errorCodeMsg = {\n    100: 'Initialization failed, Please check your appId and appKey.',\n    401: 'Unauthorized operation, Please check your appId and appKey.',\n    403: 'Access denied by api domain white list, Please check your security domain.'\n  }\n  const loggedUser = readLoggedUser()\n\n  /**\n   * Vue -> $serverLessBBS\n   * appId\n   * appKey\n   * serverURLs\n   * CommentClass\n   * CounterClass\n   * UserClass\n   */\n\n  function serverInit() {\n    return initAVObject({\n      appId,\n      appKey,\n      serverURLs,\n      CommentClass,\n      CounterClass,\n      UserClass\n    })\n  }\n  /**\n   * Required\n   * 创建页面浏览量\n   * 并保存到pageviewMap\n   * @param uniqStr\n   * @param title\n   * @returns {Promise}<Number>\n   */\n  function __generatePageViews__(uniqStr, title) {\n    const Ct = AV.Object.extend(CounterClass)\n    const newCounter = new Ct()\n    const acl = new AV.ACL()\n    acl.setPublicReadAccess(true)\n    acl.setPublicWriteAccess(true)\n    newCounter.setACL(acl)\n    newCounter.set('uniqStr', uniqStr)\n    newCounter.set('title', title)\n    newCounter.set('time', 1)\n    return newCounter\n      .save()\n      .then(() => {\n        return 1\n      })\n      .catch((ex) => {\n        console.error(errorCodeMsg[ex.code], ex)\n        return 1\n      })\n  }\n  /**\n   * Required\n   * 获取页面的浏览量\n   * 并保存到pageviewMap\n   * 不存在则先创建\n   * @param uniqStr\n   * @param title\n   * @returns {Promise}<Number>\n   */\n  function fetchPageViews_server(uniqStr, title) {\n    if (pageviewMap.has(uniqStr)) return pageviewMap.get(uniqStr)\n    const query = new AV.Query(CounterClass)\n    return query\n      .equalTo('uniqStr', uniqStr)\n      .find()\n      .then((items) => {\n        if (items.length === 0) {\n          // 不存在当前页面，创建\n          return __generatePageViews__(uniqStr, title)\n        } else {\n          if (items.length > 1) {\n            console.warn('Warning! The uniqStr is not unique! Current uniqStr is: ' + uniqStr)\n          }\n          // 存在页面， 更新\n          const item = items[0]\n          const updateTime = item.get('time') + 1\n          item.increment('time')\n          item.set('title', title)\n          return item\n            .save()\n            .then(() => {\n              return updateTime\n            })\n            .catch(() => {\n              return updateTime - 1\n            })\n        }\n      })\n      .catch((ex) => {\n        console.error(errorCodeMsg[ex.code], ex)\n        return __generatePageViews__(uniqStr, title)\n      })\n  }\n\n  /**\n   * Required\n   * 获取评论数量\n   * @param uniqStr\n   * @param includeReply\n   * @returns {Promise}<Number>\n   */\n  function fetchCounts_server(uniqStr, includeReply = false) {\n    const query = new AV.Query(CommentClass)\n    let searchPromise\n    if (includeReply) {\n      searchPromise = query.equalTo('uniqStr', uniqStr).count()\n    } else {\n      searchPromise = query\n        .equalTo('uniqStr', uniqStr)\n        .equalTo('replyId', '')\n        .count()\n    }\n    return searchPromise\n      .then((counts) => {\n        return counts\n      })\n      .catch((ex) => {\n        if (ex.code === 101) {\n          return 0\n        } else {\n          console.error('Error happen in fetch count', ex)\n          return 0\n        }\n      })\n  }\n  /**\n     *\n     * Required\n     * {\n     *      id:\"6155bb945e0db15b17f31d78\"\n     *      attributes:{\n     *          createdAt: \"2021-09-30T13:28:52.022Z\"\n                        emailVerified: false\n                        mobilePhoneVerified: false\n                        objectId: \"6155bb945e0db15b17f31d78\"\n                        sessionToken: \"t8hllhe8e33yrae0jwlqcu8wa\"\n                        updatedAt: \"2021-09-30T13:28:52.022Z\"\n                        username: \"KsswXQGgsaGBEigmrgyrdhU5F8AAlRzv\"\n     *      }\n     * }\n     * @returns {Promise}<UserObject>\n     */\n  function signIn_server(): Promise<any> {\n    if (loggedUser) return Promise.resolve(loggedUser)\n    if (!editMode) return Promise.resolve(defaultUser)\n    return new Promise((res) => {\n      if (oldRandOwnerCode) {\n        return AV.User.logIn(oldRandOwnerCode, oldRandOwnerCode)\n          .then((user) => {\n            console.log('Can login', user)\n            return res(user)\n          })\n          .catch((err) => {\n            console.log(err)\n            return signUp_server().then((user) => res(user))\n          })\n      } else {\n        return signUp_server().then((user) => res(user))\n      }\n    })\n  }\n\n  /**\n   *\n   * Required\n   */\n  function signUp_server(): Promise<any> {\n    if (!editMode) return Promise.resolve(defaultUser)\n    const user = new AV.User(UserClass)\n    user.setUsername(newRandOwnerCode)\n    user.setPassword(newRandOwnerCode)\n    console.log('signUp_server', user.id, JSON.stringify(user))\n    const acl = new AV.ACL()\n    acl.setPublicReadAccess(false)\n    // acl.setReadAccess(user.id,true);\n    // acl.setWriteAccess(user.id,true);\n    acl.setPublicWriteAccess(false)\n    user.setACL(acl)\n    console.log('Can not get, try create new user')\n    return user\n      .save()\n      .then((user) => {\n        console.log('Create success')\n        setCache(ownerCodeKey, newRandOwnerCode)\n        oldRandOwnerCode = newRandOwnerCode\n        return user\n      })\n      .catch((err) => {\n        console.error(err)\n        return defaultUser\n      })\n  }\n\n  /**\n   * Required\n   * 更新编辑\n   * @param objectId\n   * @param message\n   * @returns {Promise}<CommentObject>\n   */\n  function updateComment_server(objectId, message) {\n    if (!editMode) return Promise.reject(new Error('Not in editMode'))\n    const Ct = AV.Object.extend(CommentClass)\n    const comment = new Ct({ objectId, message }, 'PUT')\n    comment.set('message', message)\n    return comment\n      .save()\n      .then((data) => data.attributes)\n      .catch((err) => {\n        console.error('update error!', err)\n        return null\n      })\n  }\n\n  /**\n     * Required\n     * uploadField\n     * {\n                  replyId: '',\n                  email: '',\n                  avatar: '',\n                  link: '',\n                  message: '',\n                  at: '',\n                  nickname: '',\n                  uniqStr: props.uniqStr,\n\n     * }\n     * submit新的评论\n     * @param uploadField\n     * @returns {Promise}<CommentObject>\n     */\n  function uploadComment_server(uploadField) {\n    const Ct = AV.Object.extend(CommentClass)\n    const comment = new Ct()\n    for (const k in uploadField) {\n      if (!uploadField.hasOwnProperty(k)) continue\n      comment.set(k, uploadField[k])\n    }\n    comment.set('url', window.location.href)\n    const acl = new AV.ACL()\n    acl.setPublicReadAccess(true)\n    acl.setPublicWriteAccess(false)\n    return signIn_server()\n      .then((user) => {\n        // Set user_id\n        comment.set('user_id', user.id)\n        if (user.id) acl.setWriteAccess(user.id, true)\n        comment.setACL(acl)\n        return comment.save()\n      })\n      .then((response) => {\n        console.log('upload,success', response)\n        const data = response.attributes\n        if (data.error) {\n          console.error(data.error)\n          return null\n        }\n        return data\n      })\n      .catch((ex) => {\n        console.log('upload,error', ex, ex.code)\n        console.error(ex.msg)\n        return null\n      })\n  }\n\n  /**\n   * Required\n   * @param uniqStr\n   * @returns {Promise}<Array>[]\n   */\n  function fetchComments_server(uniqStr) {\n    const pageSize = 1000\n    return new AV.Query(CommentClass)\n      .equalTo('uniqStr', uniqStr)\n      .select(['nickname', 'rootId', 'message', 'link', 'pid', 'avatar', 'replyId', 'at', 'user_id'])\n      .addDescending('createdAt')\n      .skip((commentsPage - 1) * pageSize)\n      .limit(pageSize)\n      .find()\n      .then((items) => {\n        commentsPage++\n        return items.map((obj) => obj.attributes)\n      })\n      .catch((ex) => {\n        if (ex.code === 101) {\n          return []\n        } else {\n          console.error('Error happen in fetch owner task', ex)\n          return []\n        }\n      })\n  }\n  return {\n    fetchComments_server,\n    fetchCounts_server,\n    fetchPageViews_server,\n    serverInit,\n    signIn_server,\n    signUp_server,\n    updateComment_server,\n    uploadComment_server\n  }\n}\n","import AV from './CustomAV'\n// window.CustomAV=AV\nexport default function initAVObject($serverLessBBS) {\n  const { appId, appKey, serverURLs } = $serverLessBBS\n  if (AV.__appKey__ && AV.__appId__) return Promise.resolve()\n  return __initServerURLs__(appId, serverURLs).then((serverURLs) => {\n    if (!serverURLs) {\n      throw new Error('serverURLs 获取失败，请自行手动添加, https://github.com/stonehank/react-valine#获取serverURLs')\n    }\n    try {\n      AV.init({\n        appId: appId,\n        appKey: appKey,\n        serverURLs: serverURLs\n      })\n      // if(editMode)AV.User.logOut()\n    } catch (e) {\n      console.error(e)\n      throw new Error('Something error when initial leancloud, try again please')\n      // do nothing\n    }\n  })\n}\nfunction __initServerURLs__(appId, serverURLs) {\n  return new Promise((res) => {\n    if (!serverURLs) {\n      return __getServerURLs__(appId).then((url) => res(url))\n    } else {\n      return res(serverURLs)\n    }\n  })\n    .then((urls) => {\n      let serverURLs = urls\n      if (typeof serverURLs === 'string' && !serverURLs.startsWith('https://')) {\n        serverURLs = 'https://' + serverURLs\n      }\n      return serverURLs\n    })\n    .catch((err) => {\n      console.error(err)\n      throw new Error('Something error happened in initial server urls. Please pass the serverURLs manually')\n    })\n}\n\nfunction __getServerURLs__(appId) {\n  // eslint-disable-next-line no-undef\n  return fetch('https://app-router.leancloud.cn/2/route?appId=' + appId, {\n    method: 'get'\n  })\n    .then((data) => data.json())\n    .then((resp) => {\n      return resp.api_server || resp.api\n    })\n}\n"]}